# API Description

API stands for Application Programming Interface it is a connection between users, devices, applications or programs.

the API is an interface that is responsible of delivering your order (request) to the system and apply what you answer for then it delivers the response back to you as an output through internet.

# API Usage

the API is a tool that takes your data or request to the internet globally then it sends the respond back to you.

Ordering like in Talabat and how it uses your order to deliver the food

Web applications use APIs to connect user-facing front ends with all-important back end functionality and data.

Streaming like Spotify and Netflix use APIs to distribute content.

# API Endpoints/Request URLs
Endpoints

The URL API is a component of the URL standard, and an Endpoint is booking. looking and landing your request into a specific URL to get into your service or response back to you and the API can connect into only this URL.

but some times your could use an open website to ask for a response in that case the API basically sends the request into many websites to land you the needed response.

Authentication Key
Dedicated API keys for projects and authentication for users


# Availability of API keys

Project Definition - Select the application or project that calls this API

Project authorization - check if the calling application has been granted access to invoke the API and enable the API in their project


API keys define the calling project - the application or the site - that is calling the API. Authentication codes identify the user - the person - who is using the application or website.

---------------------------
Explain API types

 

Open  or Public APIs: there are no restrictions to access these types of APIs for use by any type of developer or business because they are publicly available and usually include moderate authentication and authorization.




Partner APIs: there are a few restrictions of using this API a developer is in need of a specific rights or licenses in order to access this type of API because they are not available globally.

      Partner APIs generally include stronger authentication, authorization,              and security mechanisms. Usually companies also don't monetize such            APIs directly; Partners are paid for their services instead of using an API.

Internal APIs:  AKA private APIs, internal systems only use this type of API. They are usually designed for internal use within a firm. The firm uses this type of API between different internal teams to be able to improve their productivity, products and services. Security levels are assumed to be in place through other policies. However, this is changing with increased threat awareness and regulatory compliance requirements increasingly affecting an organization's API strategy.




Composite APIs: This type of API combines different data and service APIs with two or more APIs. It is a series of tasks that run concurrently as a result of execution, not on a task request. Its main uses are to speed up the implementation process and improve the performance of listeners in web interfaces.




Explain the benefits of APIs

Saves time:


instead of making any type of work by your self you could connect into an APIs company to its product or piece of code that you can put it into your project without building it from scratch.

Efficiency: 

when accessing into an API the content of that app or web or the interface itself is automatically available at any corner of the interface.

more scope:

using the API application layer to distribute information and services to new audiences which can be personalized to create custom user experiences.

integration:

the API interface allows the content to be engraved from sites much easier and guarantees more flexible in information delivery

the Application: 

because API can easily access the application's components, the delivery of services and information would be more flexible.

Analyze the differences between API and SDK

API

API stands for Application Programming Interface it is a connection between users, devices, applications or programs.

the API is an interface that is responsible of delivering your order (request) to the system and apply what you answer for then it delivers the response back to you as an output through internet.

the API is a tool that takes your data or request to the internet globally then it sends the respond back to you.

SDK

SDK (Software Development Kit), is a toolkit that can contain APIs for a specific demand.

it's a series of tools for software development, serving both the frontend and backend. SDKs can contain one or multiple interfaces, APIs, libraries, code or documentations and much more.

An example of SDK is the Android SDK, which is used to create Samsung's and other company's Android devices applications. It contains APIs for using native device functions, components, libraries, and many other features for developing Android applications.

SDKs are usually intended for specific types of software, the SDK is a software development kit, its main function is to make a developer's life easier by providing the basics for the development of a specific software.

When to use SDK and when to use API?

well it depends on the stuff that you are in need.


in a nutshell the API is used for many tasks but the SDK is used for many services contaning so many AIPs
